/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.blogspot.gameeaterpl.ui;

import com.blogspot.gameeaterpl.ui.panels.AttributesPointsPanel;
import com.blogspot.gameeaterpl.character.Ability;
import com.blogspot.gameeaterpl.dataWrappers.MutableInteger;

/**
 *
 * @author sakurazuka
 */
public class AttributesPointsRow extends javax.swing.JPanel {

    private String mName;
    private Integer mValue;
    private MutableInteger mPointsLeft;
    private AttributeTextField mPointsLeftField;

    /**
     * Creates new form AttributesPointsRow
     */
    public AttributesPointsRow() {
        mName = "";
        initComponents();
        this.setAttributeValue(8);
    }

    public AttributesPointsRow(String pmName) {
        mName = pmName;
        initComponents();
        this.setAttributeValue(8);

    }

    public void setmPointsLeft(MutableInteger mPointsLeft) {
        this.mPointsLeft = mPointsLeft;
    }

    public void setmPointsLeftField(AttributeTextField mPointsLeftField) {
        this.mPointsLeftField = mPointsLeftField;
    }

    /**
     * Ustawia wartości pól w wierszu
     *
     * @param pmValue
     */
    private void setAttributeValue(Integer pmValue) {
        this.mValue = pmValue;
        this.attributeValueField.setText(pmValue.toString());
        this.attributeModifierField.setText(Ability.calculateModifier(pmValue).toString());
        this.checkButtonsEnabled();
    }

    /**
     * Sprawdza, czy przyciski powinny być dostępne i ustawia dopowiednio
     * atrybut enabled.
     */
    private void checkButtonsEnabled() {
        if (this.mValue == 8) {
            minusButton.setEnabled(false);
        } else {
            minusButton.setEnabled(true);
        }

        if (this.mValue == 15) {
            plusButton.setEnabled(false);
        } else {
            plusButton.setEnabled(true);
        }
    }

    public void disablePlusButton() {
        this.plusButton.setEnabled(false);
    }

    public void enablePlusButton() {
        this.plusButton.setEnabled(true);
    }
    
    public void reset() {
        setAttributeValue(8);
    }

    public Integer getmValue() {
        return mValue;
    }
    
    

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        AttributeRowLabel = new javax.swing.JLabel();
        attributeValueField = new com.blogspot.gameeaterpl.ui.AttributeTextField();
        attributeModifierField = new com.blogspot.gameeaterpl.ui.AttributeTextField();
        plusButton = new javax.swing.JButton();
        minusButton = new javax.swing.JButton();

        AttributeRowLabel.setText(mName);

        plusButton.setText("+");
        plusButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                plusButtonActionPerformed(evt);
            }
        });

        minusButton.setText("-");
        minusButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                minusButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(AttributeRowLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(attributeValueField, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(attributeModifierField, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(79, 79, 79)
                .addComponent(plusButton, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(minusButton, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                .addComponent(attributeValueField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addComponent(AttributeRowLabel)
                .addComponent(attributeModifierField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addComponent(plusButton)
                .addComponent(minusButton))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void plusButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_plusButtonActionPerformed
        this.setAttributeValue(this.mValue + 1);
        if (this.mPointsLeft != null && this.mPointsLeftField != null) {
            this.mPointsLeft.Decrease(1);
            this.mPointsLeftField.setText(this.mPointsLeft.toString());
        }
        ((AttributesPointsPanel)this.getParent()).checkPlusButtons();
    }//GEN-LAST:event_plusButtonActionPerformed

    private void minusButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_minusButtonActionPerformed
        this.setAttributeValue(this.mValue - 1);
        if (this.mPointsLeft != null && this.mPointsLeftField != null) {
            this.mPointsLeft.Increase(1);
            this.mPointsLeftField.setText(this.mPointsLeft.toString());
        }
        ((AttributesPointsPanel)this.getParent()).checkPlusButtons();
    }//GEN-LAST:event_minusButtonActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel AttributeRowLabel;
    private com.blogspot.gameeaterpl.ui.AttributeTextField attributeModifierField;
    private com.blogspot.gameeaterpl.ui.AttributeTextField attributeValueField;
    private javax.swing.JButton minusButton;
    private javax.swing.JButton plusButton;
    // End of variables declaration//GEN-END:variables
}
