/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.blogspot.gameeaterpl.ui;

import com.blogspot.gameeaterpl.character.Character;
/**
 *
 * @author sakurazuka
 */
public class CardLayout extends javax.swing.JPanel {

    private Integer mActiveCard = 0;
    private String[] mCardNames = {"card2", "card3", "card4"};

    /**
     * Creates new form CardLayout
     */
    public CardLayout() {
        initComponents();

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        mainInfoPanel1 = new com.blogspot.gameeaterpl.ui.MainInfoPanel();
        attributesTabbedPanel1 = new com.blogspot.gameeaterpl.ui.AttributesTabbedPanel();
        raceChosePanel1 = new com.blogspot.gameeaterpl.ui.RaceChosePanel();

        setLayout(new java.awt.CardLayout());
        add(mainInfoPanel1, "card2");
        add(attributesTabbedPanel1, "card4");
        add(raceChosePanel1, "card3");
    }// </editor-fold>//GEN-END:initComponents


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private com.blogspot.gameeaterpl.ui.AttributesTabbedPanel attributesTabbedPanel1;
    private com.blogspot.gameeaterpl.ui.MainInfoPanel mainInfoPanel1;
    private com.blogspot.gameeaterpl.ui.RaceChosePanel raceChosePanel1;
    // End of variables declaration//GEN-END:variables

    /**
     * Metoda przerzuca karty layoutu do przodu. Do wykorzystania z przyciskiem
     * Next. Metoda uniemożliwia zapętlenie layoutu.
     */
    public void flipCardsNext() {
        java.awt.CardLayout lvCardLayout = (java.awt.CardLayout) this.getLayout();
        if (this.mActiveCard < this.mCardNames.length - 1) {
            lvCardLayout.next(this);
            this.mActiveCard++;
        }
    }

    /**
     * Metoda przerzuca karty layoutu do tyłu. Do wykorzystania z przyciskiem
     * Previous. Metoda uniemożliwia zapętlenie layoutu.
     */
    public void flipCardsPrevious() {
        java.awt.CardLayout lvCardLayout = (java.awt.CardLayout) this.getLayout();
        if (this.mActiveCard > 0) {
            lvCardLayout.previous(this);
            this.mActiveCard--;
        }
    }

    public void fillCharacterObject(Character pmCharacter)
    {
        switch(mActiveCard)
        {
            case 0:
                mainInfoPanel1.fillCharacterObject(pmCharacter);
                break;
            case 1:
                attributesTabbedPanel1.fillCharacterObject(pmCharacter);
                break;
            default:
                break;
        }
    }
}
